(deffunction bogus ())
(defgeneric bogus)
(defmethod bogus ())
(defgeneric)
(defgeneric bad bad-comment)
(defgeneric bad ())
(defgeneric bad "good-comment" extra-garbage)
(defmethod)
(defmethod ())
(defmethod 1)
(defmethod 1 ())
(defmethod good ((?a NUMBER (> ?a 0)) (?b LEXEME (neq ?b "ERROR"))))
(defmethod good 2 ((?a NUMBER (> ?a 0)) (?b LEXEME (neq ?b "ERROR"))))
(defmethod bad 0 ())
(defmethod bad 2147483648 ())
(defmethod bad (?a 34))
(defmethod bad ($?any ?any))
(defmethod bad (?a ?a))
(defmethod bad ((?a)))
(defmethod bad ((?a INTEGER NUMBER)))
(defmethod bad ((?a JUNK)))
(defmethod bad ((?a INTEGER 65)))
(defmethod bad)
(defmethod bad (abc))
(defmethod bad ((abc)))
(defmethod bad ((?a (< ?a 1) INTEGER)))
(defmethod bad ((?a INTEGER INTEGER)))
(defmethod foo ((?a (bind ?b 1))))
(defgeneric defrule)
(defmethod defrule ())
(list-defgenerics)
(list-defmethods)
(defmethod foo (?a)
  (+ ?b 2)
  (bind ?b 1))
(foo (+ (eval "(gensym)") 2))
(foo 1)
(foo (instances))
(defmethod foo ()
  (undefmethod foo *))
(foo)
(foo 1 2)
(call-next-method)
(defmethod bar ((?a INTEGER)))
(bar [bogus-instance])
(undefmethod * 1)
(clear)
(defgeneric +)
(+ abc def)
(defmethod foo (($?any INTEGER (> ?current-argument 10)))
   ?current-argument)
(defgeneric any-instancep)
(defmethod any-instancep ())
(defgeneric assert)
(defmethod assert ())
(defgeneric bind)
(defmethod bind ())
(defgeneric break)
(defmethod break ())
(defgeneric call-next-handler)
(defmethod call-next-handler ())
(defgeneric call-next-method)
(defmethod call-next-method ())
(defgeneric delayed-do-for-all-instances)
(defmethod delayed-do-for-all-instances ())
(defgeneric do-for-all-instances)
(defmethod do-for-all-instances ())
(defgeneric do-for-instance)
(defmethod do-for-instance ())
(defgeneric duplicate)
(defmethod duplicate ())
(defgeneric expand$)
(defmethod expand$ ())
(defgeneric find-all-instances)
(defmethod find-all-instances ())
(defgeneric find-instance)
(defmethod find-instance ())
(defgeneric if)
(defmethod if ())
(defgeneric initialize-instance)
(defmethod initialize-instance ())
(defgeneric make-instance)
(defmethod make-instance ())
(defgeneric modify)
(defmethod modify ())
(defgeneric next-handlerp)
(defmethod next-handlerp ())
(defgeneric next-methodp)
(defmethod next-methodp ())
(defgeneric override-next-handler)
(defmethod override-next-handler ())
(defgeneric progn)
(defmethod progn ())
(defgeneric retract)
(defmethod retract ())
(defgeneric return)
(defmethod return ())
(defgeneric while)
(defmethod while ())
