TRUE
CLIPS> (batch "dffctcmd.bat")
TRUE
CLIPS> (clear)
CLIPS> (deftemplate foo (field x) (multifield y))
CLIPS> (deffacts d1)
CLIPS> (deffacts d2 (a))
CLIPS> (deffacts d3 (a) (b) (c))
CLIPS> (deffacts d4 (foo (x 3) (y)))
CLIPS> (deffacts d5 (a) (foo (y a) (x 3)))
CLIPS> (deffacts d6 (foo (y a b)) (b) (foo (x 3)) (d))
CLIPS> (deffacts *)
CLIPS> (list-deffacts d6)
[ARGACCES5] Function list-deffacts expected argument #1 to be of type defmodule name
CLIPS> (list-deffacts)
initial-fact
d1
d2
d3
d4
d5
d6
*
For a total of 8 deffacts.
CLIPS> (ppdeffacts d1)
(deffacts MAIN::d1)
CLIPS> (ppdeffacts d2)
(deffacts MAIN::d2
   (a))
CLIPS> (ppdeffacts d3)
(deffacts MAIN::d3
   (a)
   (b)
   (c))
CLIPS> (ppdeffacts d4)
(deffacts MAIN::d4
   (foo (x 3) (y)))
CLIPS> (ppdeffacts d5)
(deffacts MAIN::d5
   (a)
   (foo (y a) (x 3)))
CLIPS> (ppdeffacts d6)
(deffacts MAIN::d6
   (foo (y a b))
   (b)
   (foo (x 3))
   (d))
CLIPS> (undeffacts)
[ARGACCES4] Function undeffacts expected exactly 1 argument(s)
CLIPS> (undeffacts 10)
[ARGACCES5] Function undeffacts expected argument #1 to be of type symbol
CLIPS> (undeffacts bad-name)
[PRNTUTIL1] Unable to find deffacts bad-name.
CLIPS> (undeffacts d6 10)
[ARGACCES4] Function undeffacts expected exactly 1 argument(s)
CLIPS> (list-deffacts)
initial-fact
d1
d2
d3
d4
d5
d6
*
For a total of 8 deffacts.
CLIPS> (undeffacts d1)
CLIPS> (undeffacts d2)
CLIPS> (undeffacts d3)
CLIPS> (list-deffacts)
initial-fact
d4
d5
d6
*
For a total of 5 deffacts.
CLIPS> (undeffacts *)
CLIPS> (list-deffacts)
initial-fact
d4
d5
d6
For a total of 4 deffacts.
CLIPS> (undeffacts *)
CLIPS> (list-deffacts)
CLIPS> (clear) ; Some new 6.0 features
CLIPS> (deffacts BOGUS::d5)
[PRNTUTIL1] Unable to find defmodule BOGUS.

ERROR:
(deffacts BOGUS::d5
CLIPS> (defmodule FOO)
CLIPS> (deffacts FOO::d1)
CLIPS> (deffacts FOO::d2)
CLIPS> (defmodule BAR)
CLIPS> (deffacts BAR::d2)
CLIPS> (deffacts BAR::d3)
CLIPS> (list-deffacts BOGUS)
[ARGACCES5] Function list-deffacts expected argument #1 to be of type defmodule name
CLIPS> (list-deffacts FOO 7)
[ARGACCES4] Function list-deffacts expected no more than 1 argument(s)
CLIPS> (list-deffacts FOO)
d1
d2
For a total of 2 deffacts.
CLIPS> (list-deffacts BAR)
d2
d3
For a total of 2 deffacts.
CLIPS> (list-deffacts)
d2
d3
For a total of 2 deffacts.
CLIPS> (list-deffacts *)
MAIN:
   initial-fact
FOO:
   d1
   d2
BAR:
   d2
   d3
For a total of 5 deffacts.
CLIPS> (get-deffacts-list 7)
[ARGACCES5] Function get-deffacts-list expected argument #1 to be of type symbol
CLIPS> (get-deffacts-list BOGUS 7)
[ARGACCES4] Function get-deffacts-list expected no more than 1 argument(s)
CLIPS> (get-deffacts-list)
(d2 d3)
CLIPS> (get-deffacts-list BOGUS)
[ARGACCES5] Function get-deffacts-list expected argument #1 to be of type defmodule name
()
CLIPS> (get-deffacts-list FOO)
(d1 d2)
CLIPS> (get-deffacts-list BAR)
(d2 d3)
CLIPS> (get-deffacts-list *)
(MAIN::initial-fact FOO::d1 FOO::d2 BAR::d2 BAR::d3)
CLIPS> (ppdeffacts d1)
[PRNTUTIL1] Unable to find deffacts d1.
CLIPS> (ppdeffacts d2)
(deffacts BAR::d2)
CLIPS> (ppdeffacts d3)
(deffacts BAR::d3)
CLIPS> (ppdeffacts BOGUS::d2)
[PRNTUTIL1] Unable to find deffacts BOGUS::d2.
CLIPS> (ppdeffacts FOO::d1)
(deffacts FOO::d1)
CLIPS> (ppdeffacts FOO::d2)
(deffacts FOO::d2)
CLIPS> (ppdeffacts FOO::d3)
[PRNTUTIL1] Unable to find deffacts FOO::d3.
CLIPS> (ppdeffacts BAR::d1)
[PRNTUTIL1] Unable to find deffacts BAR::d1.
CLIPS> (ppdeffacts BAR::d2)
(deffacts BAR::d2)
CLIPS> (ppdeffacts BAR::d3)
(deffacts BAR::d3)
CLIPS> (deffacts-module)
[ARGACCES4] Function deffacts-module expected exactly 1 argument(s)
CLIPS> (deffacts-module bogus)
[PRNTUTIL1] Unable to find deffacts bogus.
FALSE
CLIPS> (deffacts-module d3 7)
[ARGACCES4] Function deffacts-module expected exactly 1 argument(s)
CLIPS> (deffacts-module d2)
BAR
CLIPS> (deffacts-module d3)
BAR
CLIPS> (deffacts-module FOO::d1)
FOO
CLIPS> (deffacts-module FOO::d2)
FOO
CLIPS> (deffacts-module BAR::d2)
BAR
CLIPS> (deffacts-module BAR::d3)
BAR
CLIPS> (undeffacts BOGUS::d2)
[PRNTUTIL1] Unable to find deffacts BOGUS::d2.
CLIPS> (undeffacts FOO::d2)
CLIPS> (list-deffacts *)
MAIN:
   initial-fact
FOO:
   d1
BAR:
   d2
   d3
For a total of 4 deffacts.
CLIPS> (undeffacts BAR::d2)
CLIPS> (list-deffacts *)
MAIN:
   initial-fact
FOO:
   d1
BAR:
   d3
For a total of 3 deffacts.
CLIPS> (undeffacts *)
CLIPS> (list-deffacts *)
MAIN:
   initial-fact
FOO:
   d1
BAR:
For a total of 2 deffacts.
CLIPS> (dribble-off)
