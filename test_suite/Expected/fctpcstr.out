TRUE
CLIPS> (load "fctpcstr.clp")
%%*
[RULECSTR1] Variable ?x in CE #1 slot y
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-1 "Caught by CRSV, but only warning"
   (foo (x ?x) (y ?x))
   =>)
*
[RULECSTR1] Variable ?x in CE #2 slot y
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-2 "Caught by CRSV, but only warning"
   (foo (x ?x))
   (foo (y ?x))
   =>)
*
[RULECSTR1] Variable ?x in CE #1 slot c
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-3 "Caught by CRSV, but only warning"
   (bar (a ?x) (b ?x) (c ?x))
   =>)
*
[RULECSTR1] Variable ?x in CE #3 slot c
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-4 "Caught by CRSV, but only warning"
   (bar (a ?x))
   (bar (b ?x))
   (bar (c ?x))
   =>)
*%%%%*
[RULECSTR1] Variable ?x in CE #2 slot a
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-5 "Range Violation: Caught by CRSV"
   (yak (a ?x))
   (obo (a ?x))
   =>)
*
[RULECSTR1] Variable ?x in CE #3 slot a
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-6 "Range Violation: Caught by CRSV"
   (yak (a ?x))
   (lok (a ?x))
   (obo (a ?x))
   =>)
*
[RULECSTR1] Pattern #3 slot a
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-7 "Range Violation: Caught by CRSV"
   (yak (a ?x))
   (obo (a ?y))
   (vod (a ?x|?y))
   =>)
*%*
[RULECSTR1] Variable ?x in CE #1 slot y
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-8 "CRSV gives only 1 possible value warning--should be error"
   (kji (x ?x) (y ?x&~on))
   =>)
%%%**
[RULECSTR1] Variable ?x in CE #3 slot x
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-9 "No possible values: Caught by CRSV"
   (foo7 (x ?x))
   (bar7 (x ?x))
   (yak7 (x ?x))
   =>)
%%**%%*
[RULECSTR1] Variable ?x in CE #2 slot q
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-10 "CRSV does not give a warning for this one"
   (xoo (x $?x))
   (yxk (q $?x))
   =>)
%%%*
[CSTRNCHK1] The group of restrictions found in CE #3
does not satisfy the cardinality restrictions for slot z.

ERROR:
(defrule MAIN::error-11 "CRSV does not give a warning for this one"
   (fow (x $?x))
   (bww (y $?y))
   (wak (z $?x $?y))
   =>)
%%%%*
[CSTRNCHK1] The group of restrictions found in CE #4
does not satisfy the cardinality restrictions for slot q.

ERROR:
(defrule MAIN::error-12 "CRSV does not give a warning for this one"
   (fll (x $?x))
   (blr (y $?y))
   (qlz (z $?z))
   (ylk (q $?x ? $?y ? b $?z))
   =>)
*
[CSTRNCHK1] The group of restrictions found in CE #1
does not satisfy the cardinality restrictions for slot x.

ERROR:
(defrule MAIN::error-13 "CRSV does not give a warning for this one"
   (fll (x ?))
   =>)
*%*%*
[RULECSTR1] Pattern #1 slot x
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-14 "CRSV gives inappropriate error--does not detect return value error"
   (kbp (y ?y) (x =(+ ?y 3)))
   =>)
%*
[RULECSTR2] Previous variable bindings of ?x caused the type restrictions
for argument #2 of the expression (> ?y ?x)
found in CE #1 slot y to be violated.

ERROR:
(defrule MAIN::error-15 "Type Violation to LHS function call: Not caught by CRSV"
   (zc8 (x ?x) (y ?y&:(> ?y ?x)))
   =>)
*
[RULECSTR2] Previous variable bindings of ?x caused the type restrictions
for argument #2 of the expression (> ?y ?x)
found in CE #2 to be violated.

ERROR:
(defrule MAIN::error-16 "Type Violation to LHS function call: Not caught by CRSV"
   (zc8 (x ?x) (y ?y))
   (test (> ?y ?x))
   =>)
*
[ANALYSIS4] Variable ?x found in the expression (> ?x 3)
was referenced in CE #2 before being defined.

ERROR:
(defrule MAIN::error-17 "Unbound variable error: Caught by CRSV"
   (a)
   (test (> ?x 3))
   =>)
*
[ANALYSIS4] Variable ?x found in the expression (> ?x 3)
was referenced in CE #1 field #1 before being defined.

ERROR:
(defrule MAIN::error-18 "Unbound variable error: Not caught by CRSV"
   (a ?y&:(or (> ?x 3) (< ?x 5)))
   =>)
*[ARGACCES5] Function + expected argument #2 to be of type integer or float

ERROR:
(defrule MAIN::error-19 "Wrong argument type: Not caught by CRSV"
   =>
   (+ 3 a)
*[ARGACCES5] Function + expected argument #2 to be of type integer or float

ERROR:
(defrule MAIN::error-20 "Wrong argument type: Not caught by CRSV"
   (buffy =(+ 3 a)
%*
[RULECSTR1] Pattern #1 field #1
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-21 "CRSV gives warning about & -- Rule cannot be  matched"
   (buffy a&b)
   =>)
*
[RULECSTR1] Pattern #1 field #1
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-22 "CRSV does not detect this error"
   (buffy a&~a)
   =>)
*%*
[RULECSTR3] Previous variable bindings of ?q caused the type restrictions
for argument #3 of the expression (+ 3 5 ?q)
found in the rule's RHS to be violated.

ERROR:
(defrule MAIN::error-23 "Not detected by CRSV"
   (rty (x ?q))
   =>
   (+ 3 5 ?q))
**
[RULECSTR3] Previous variable bindings of ?q caused the type restrictions
for argument #3 of the expression (+ 3 5 ?q)
found in the rule's RHS to be violated.

ERROR:
(defrule MAIN::error-24 "Not detected by CRSV"
   (rty)
   =>
   (bind ?q (gensym))
   (+ 3 5 ?q))
*%*
[RULECSTR1] Variable ?x in CE #1 slot y
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-25
   (jhj (x ?x&2) (y ?x))
   =>)
%*
[RULECSTR1] Variable ?x in CE #2 slot foo
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-26
   (blah ?x&:(> ?x 5))
   (yuck (foo ?x))
   =>)
*
[RULECSTR2] Previous variable bindings of ?x caused the type restrictions
for argument #1 of the expression (> ?x 5)
found in CE #2 to be violated.

ERROR:
(defrule MAIN::error-27
   (yuck (foo ?x))
   (test (> ?x 5))
   =>)
*
[RULECSTR1] Variable ?x in CE #3 slot foo
has constraint conflicts which make the pattern unmatchable.

ERROR:
(defrule MAIN::error-28
   (blah ?x)
   (test (> ?x 5))
   (yuck (foo ?x))
   =>)

FALSE
CLIPS> (rules)
okay!-1
okay!-2
okay!-3
okay!-4
okay!-5
okay!-6
okay!-7
okay!-8
okay!-9
okay!-10
For a total of 10 defrules.
CLIPS> (dribble-off)
