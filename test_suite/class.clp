(defclass doc-test (is-a USER) (role concrete)
  (message-handler complete and utter garbage)
  (message-handler complete and utter garbage)
  (message-handler complete and utter garbage)
  (message-handler complete and utter garbage))
(defclass A1 (is-a USER) (role concrete) (pattern-match non-reactive)
  (slot fooA (create-accessor read-write))
  (slot barA (create-accessor read-write)))
(defclass B1 (is-a A1)
  (slot fooB (create-accessor read-write))
  (slot barB (create-accessor read-write)))
(defclass A2 (is-a USER) (role concrete)
  (slot foo (default-dynamic (gensym)) (create-accessor read-write))
  (slot bar (default (gensym)) (create-accessor read-write)))
(defclass A3 (is-a USER) (role concrete)
  (multislot foo  (create-accessor read-write)
            (default abc def ghi))
  (single-slot bar (create-accessor read-write)))
(defclass A4 (is-a USER) (role concrete))
(defclass A4 (is-a USER) (role concrete))
(defclass A4 (is-a USER) (role concrete))
(defclass A4 (is-a USER) (role concrete))
(defclass A4 (is-a USER) (role concrete)
  (slot foo (storage shared) (default 1) (create-accessor read-write))
  (slot bar (storage shared) (default-dynamic 2) (create-accessor read-write))
  (slot woz (storage local) (create-accessor read-write)))
(defclass A5 (is-a USER) (role concrete) (pattern-match non-reactive)
  (slot foo (access read-only) (default 36) (create-accessor read)))
(defclass A6 (is-a USER) (role concrete)
  (slot foo (access read-write) (create-accessor read-write))
  (slot bar (access read-only) (default abc) (create-accessor read))
  (slot woz (access initialize-only) (create-accessor read-write)))
(defclass A7 (is-a USER) (role concrete) (pattern-match non-reactive)
  (slot foo (propagation inherit) (create-accessor read-write))
  (slot bar (propagation no-inherit) (create-accessor read-write)))
(defclass B7 (is-a A7))
(defclass A8 (is-a USER) (role concrete) (pattern-match non-reactive)
  (multislot foo (create-accessor read-write)))
(defclass B8 (is-a A8)
  (slot foo (propagation no-inherit) (storage shared) (create-accessor read-write)))
(defclass C8 (is-a B8)
  (slot foo (source composite) (access read-only) (create-accessor read)))
(defclass A9 (is-a USER) (role concrete) (pattern-match non-reactive)
  (multislot foo (access read-only) (default a b c) 
                 (create-accessor read)))
(defclass B9 (is-a A9)
   (slot foo (source composite) (default d e f)))
(defglobal ?*global-test* = 100)
(defclass GLOBAL-TEST (is-a USER) (role concrete)
   (slot x (default ?*global-test*) (create-accessor read-write))
   (slot y (default-dynamic ?*global-test*) (create-accessor read-write)))
