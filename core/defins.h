   /*******************************************************/
   /*      "C" Language Integrated Production System      */
   /*                                                     */
   /*             CLIPS Version 6.40  06/20/16            */
   /*                                                     */
   /*                                                     */
   /*******************************************************/

/*************************************************************/
/* Purpose:                                                  */
/*                                                           */
/* Principal Programmer(s):                                  */
/*      Brian L. Dantes                                      */
/*                                                           */
/* Contributing Programmer(s):                               */
/*                                                           */
/* Revision History:                                         */
/*                                                           */
/*      6.23: Corrected compilation errors for files         */
/*            generated by constructs-to-c. DR0861           */
/*                                                           */
/*      6.24: Renamed BOOLEAN macro type to intBool.         */
/*                                                           */
/*      6.30: Removed conditional code for unsupported       */
/*            compilers/operating systems (IBM_MCW,          */
/*            MAC_MCW, and IBM_TBC).                         */
/*                                                           */
/*            GetConstructNameAndComment API change.         */
/*                                                           */
/*            Added const qualifiers to remove C++           */
/*            deprecation warnings.                          */
/*                                                           */
/*            Converted API macros to function calls.        */
/*                                                           */
/*            Changed find construct functionality so that   */
/*            imported modules are search when locating a    */
/*            named construct.                               */
/*                                                           */
/*      6.40: Removed LOCALE definition.                     */
/*                                                           */
/*            Pragma once and other inclusion changes.       */
/*                                                           */
/*************************************************************/

#ifndef _H_defins

#pragma once

#define _H_defins

#if DEFINSTANCES_CONSTRUCT

struct definstances;

#include "conscomp.h"
#include "constrct.h"
#include "cstrccom.h"
#include "moduldef.h"
#include "object.h"

typedef struct definstancesModule
  {
   struct defmoduleItemHeader header;
  } DEFINSTANCES_MODULE;

typedef struct definstances
  {
   struct constructHeader header;
   unsigned busy;
   EXPRESSION *mkinstance;
  } DEFINSTANCES;

#define DEFINSTANCES_DATA 22

struct definstancesData
  { 
   struct construct *DefinstancesConstruct;
   int DefinstancesModuleIndex;
#if CONSTRUCT_COMPILER && (! RUN_TIME)
   struct CodeGeneratorItem *DefinstancesCodeItem;
#endif
  };

#define DefinstancesData(theEnv) ((struct definstancesData *) GetEnvironmentData(theEnv,DEFINSTANCES_DATA))

   const char                    *EnvDefinstancesModule(void *,void *);
   const char                    *EnvDefinstancesModuleName(void *,void *);
   void                          *EnvFindDefinstances(void *,const char *);
   void                          *EnvFindDefinstancesInModule(void *,const char *);
   void                           EnvGetDefinstancesList(void *,DATA_OBJECT *,struct defmodule *);
   const char                    *EnvGetDefinstancesName(void *,void *);
   SYMBOL_HN                     *EnvGetDefinstancesNamePointer(void *,void *);
   const char                    *EnvGetDefinstancesPPForm(void *,void *);
   void                          *EnvGetNextDefinstances(void *,void *);
   int                            EnvIsDefinstancesDeletable(void *,void *);
   void                           EnvSetDefinstancesPPForm(void *,void *,const char *);
   intBool                        EnvUndefinstances(void *,void *);
   void                           GetDefinstancesListFunction(void *,DATA_OBJECT *);
   void                          *GetDefinstancesModuleCommand(void *);
   void                           SetupDefinstances(void *);
   void                           UndefinstancesCommand(void *);
#if DEBUGGING_FUNCTIONS
   void                           PPDefinstancesCommand(void *);
   void                           ListDefinstancesCommand(void *);
   void                           EnvListDefinstances(void *,const char *,struct defmodule *);
#endif

#if ALLOW_ENVIRONMENT_GLOBALS

   const char                    *DefinstancesModule(void *);
   void                          *FindDefinstances(const char *);
   void                           GetDefinstancesList(DATA_OBJECT *,struct defmodule *);
   const char                    *GetDefinstancesName(void *);
   const char                    *GetDefinstancesPPForm(void *);
   void                          *GetNextDefinstances(void *);
   int                            IsDefinstancesDeletable(void *);
#if DEBUGGING_FUNCTIONS
   void                           ListDefinstances(const char *,struct defmodule *);
#endif
   intBool                        Undefinstances(void *);

#endif /* ALLOW_ENVIRONMENT_GLOBALS */

#endif /* DEFINSTANCES_CONSTRUCT */

#endif /* _H_defins */




